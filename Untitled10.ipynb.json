{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting package metadata (current_repodata.json): done\n",
      "Solving environment: done\n",
      "\n",
      "# All requested packages already installed.\n",
      "\n",
      "Collecting geopy\n",
      "  Downloading geopy-2.0.0-py3-none-any.whl (111 kB)\n",
      "\u001b[K     |████████████████████████████████| 111 kB 3.7 MB/s eta 0:00:01\n",
      "\u001b[?25hCollecting geographiclib<2,>=1.49\n",
      "  Downloading geographiclib-1.50-py3-none-any.whl (38 kB)\n",
      "Installing collected packages: geographiclib, geopy\n",
      "Successfully installed geographiclib-1.50 geopy-2.0.0\n",
      "Requirement already satisfied: beautifulsoup4 in ./opt/anaconda3/lib/python3.7/site-packages (4.8.2)\n",
      "Requirement already satisfied: soupsieve>=1.2 in ./opt/anaconda3/lib/python3.7/site-packages (from beautifulsoup4) (1.9.5)\n",
      "Requirement already satisfied: lxml in ./opt/anaconda3/lib/python3.7/site-packages (4.5.0)\n",
      "Collecting package metadata (current_repodata.json): done\n",
      "Solving environment: done\n",
      "\n",
      "# All requested packages already installed.\n",
      "\n",
      "Folium installed\n",
      "Libraries imported.\n"
     ]
    }
   ],
   "source": [
    "!conda install -c conda-forge geocoder --yes\n",
    "!pip install geopy\n",
    "import geocoder\n",
    "from geopy.geocoders import Nominatim # module to convert an address into latitude and longitude values\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "!pip install beautifulsoup4\n",
    "!pip install lxml\n",
    "import requests # library to handle requests\n",
    "import random # library for random number generation\n",
    "\n",
    "\n",
    "# libraries for displaying images\n",
    "from IPython.display import Image \n",
    "from IPython.core.display import HTML \n",
    "\n",
    "\n",
    "from IPython.display import display_html\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "    \n",
    "# tranforming json file into a pandas dataframe library\n",
    "from pandas.io.json import json_normalize\n",
    "\n",
    "!conda install -c conda-forge folium=0.5.0 --yes\n",
    "import folium # plotting library\n",
    "from bs4 import BeautifulSoup\n",
    "from sklearn.cluster import KMeans\n",
    "import matplotlib.cm as cm\n",
    "import matplotlib.colors as colors\n",
    "\n",
    "print('Folium installed')\n",
    "print('Libraries imported.')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Obtaining data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<title>List of postal codes of Canada: M - Wikipedia</title>\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"wikitable sortable\">\n",
       "<tbody><tr>\n",
       "<th>Postal Code\n",
       "</th>\n",
       "<th>Borough\n",
       "</th>\n",
       "<th>Neighbourhood\n",
       "</th></tr>\n",
       "<tr>\n",
       "<td>M1A\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2A\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3A\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Parkwoods\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4A\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Victoria Village\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5A\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Regent Park, Harbourfront\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6A\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Lawrence Manor, Lawrence Heights\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7A\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Queen's Park, Ontario Provincial Government\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8A\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9A\n",
       "</td>\n",
       "<td>Etobicoke\n",
       "</td>\n",
       "<td>Islington Avenue, Humber Valley Village\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1B\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Malvern, Rouge\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2B\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3B\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Don Mills\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4B\n",
       "</td>\n",
       "<td>East York\n",
       "</td>\n",
       "<td>Parkview Hill, Woodbine Gardens\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5B\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Garden District, Ryerson\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6B\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Glencairn\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7B\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8B\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9B\n",
       "</td>\n",
       "<td>Etobicoke\n",
       "</td>\n",
       "<td>West Deane Park, Princess Gardens, Martin Grove, Islington, Cloverdale\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1C\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Rouge Hill, Port Union, Highland Creek\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2C\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3C\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Don Mills\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4C\n",
       "</td>\n",
       "<td>East York\n",
       "</td>\n",
       "<td>Woodbine Heights\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5C\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>St. James Town\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6C\n",
       "</td>\n",
       "<td>York\n",
       "</td>\n",
       "<td>Humewood-Cedarvale\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7C\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8C\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9C\n",
       "</td>\n",
       "<td>Etobicoke\n",
       "</td>\n",
       "<td>Eringate, Bloordale Gardens, Old Burnhamthorpe, Markland Wood\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1E\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Guildwood, Morningside, West Hill\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2E\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3E\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4E\n",
       "</td>\n",
       "<td>East Toronto\n",
       "</td>\n",
       "<td>The Beaches\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5E\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Berczy Park\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6E\n",
       "</td>\n",
       "<td>York\n",
       "</td>\n",
       "<td>Caledonia-Fairbanks\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7E\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8E\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9E\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1G\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Woburn\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2G\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3G\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4G\n",
       "</td>\n",
       "<td>East York\n",
       "</td>\n",
       "<td>Leaside\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5G\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Central Bay Street\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6G\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Christie\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7G\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8G\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9G\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1H\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Cedarbrae\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2H\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Hillcrest Village\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3H\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Bathurst Manor, Wilson Heights, Downsview North\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4H\n",
       "</td>\n",
       "<td>East York\n",
       "</td>\n",
       "<td>Thorncliffe Park\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5H\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Richmond, Adelaide, King\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6H\n",
       "</td>\n",
       "<td>West Toronto\n",
       "</td>\n",
       "<td>Dufferin, Dovercourt Village\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7H\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8H\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9H\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1J\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Scarborough Village\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2J\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Fairview, Henry Farm, Oriole\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3J\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Northwood Park, York University\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4J\n",
       "</td>\n",
       "<td>East York\n",
       "</td>\n",
       "<td>East Toronto, Broadview North (Old East York)\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5J\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Harbourfront East, Union Station, Toronto Islands\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6J\n",
       "</td>\n",
       "<td>West Toronto\n",
       "</td>\n",
       "<td>Little Portugal, Trinity\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7J\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8J\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9J\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1K\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Kennedy Park, Ionview, East Birchmount Park\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2K\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Bayview Village\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3K\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Downsview\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4K\n",
       "</td>\n",
       "<td>East Toronto\n",
       "</td>\n",
       "<td>The Danforth West, Riverdale\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5K\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Toronto Dominion Centre, Design Exchange\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6K\n",
       "</td>\n",
       "<td>West Toronto\n",
       "</td>\n",
       "<td>Brockton, Parkdale Village, Exhibition Place\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7K\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8K\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9K\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1L\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Golden Mile, Clairlea, Oakridge\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2L\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>York Mills, Silver Hills\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3L\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Downsview\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4L\n",
       "</td>\n",
       "<td>East Toronto\n",
       "</td>\n",
       "<td>India Bazaar, The Beaches West\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5L\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Commerce Court, Victoria Hotel\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6L\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>North Park, Maple Leaf Park, Upwood Park\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7L\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8L\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9L\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Humber Summit\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1M\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Cliffside, Cliffcrest, Scarborough Village West\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2M\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Willowdale, Newtonbrook\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3M\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Downsview\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4M\n",
       "</td>\n",
       "<td>East Toronto\n",
       "</td>\n",
       "<td>Studio District\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5M\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Bedford Park, Lawrence Manor East\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6M\n",
       "</td>\n",
       "<td>York\n",
       "</td>\n",
       "<td>Del Ray, Mount Dennis, Keelsdale and Silverthorn\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7M\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8M\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9M\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Humberlea, Emery\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1N\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Birch Cliff, Cliffside West\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2N\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Willowdale, Willowdale East\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3N\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Downsview\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4N\n",
       "</td>\n",
       "<td>Central Toronto\n",
       "</td>\n",
       "<td>Lawrence Park\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5N\n",
       "</td>\n",
       "<td>Central Toronto\n",
       "</td>\n",
       "<td>Roselawn\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6N\n",
       "</td>\n",
       "<td>York\n",
       "</td>\n",
       "<td>Runnymede, The Junction North\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7N\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8N\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9N\n",
       "</td>\n",
       "<td>York\n",
       "</td>\n",
       "<td>Weston\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1P\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Dorset Park, Wexford Heights, Scarborough Town Centre\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2P\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>York Mills West\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3P\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4P\n",
       "</td>\n",
       "<td>Central Toronto\n",
       "</td>\n",
       "<td>Davisville North\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5P\n",
       "</td>\n",
       "<td>Central Toronto\n",
       "</td>\n",
       "<td>Forest Hill North &amp; West, Forest Hill Road Park\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6P\n",
       "</td>\n",
       "<td>West Toronto\n",
       "</td>\n",
       "<td>High Park, The Junction South\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7P\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8P\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9P\n",
       "</td>\n",
       "<td>Etobicoke\n",
       "</td>\n",
       "<td>Westmount\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1R\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Wexford, Maryvale\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2R\n",
       "</td>\n",
       "<td>North York\n",
       "</td>\n",
       "<td>Willowdale, Willowdale West\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3R\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4R\n",
       "</td>\n",
       "<td>Central Toronto\n",
       "</td>\n",
       "<td>North Toronto West,  Lawrence Park\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5R\n",
       "</td>\n",
       "<td>Central Toronto\n",
       "</td>\n",
       "<td>The Annex, North Midtown, Yorkville\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6R\n",
       "</td>\n",
       "<td>West Toronto\n",
       "</td>\n",
       "<td>Parkdale, Roncesvalles\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7R\n",
       "</td>\n",
       "<td>Mississauga\n",
       "</td>\n",
       "<td>Canada Post Gateway Processing Centre\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8R\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9R\n",
       "</td>\n",
       "<td>Etobicoke\n",
       "</td>\n",
       "<td>Kingsview Village, St. Phillips, Martin Grove Gardens, Richview Gardens\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1S\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Agincourt\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2S\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3S\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4S\n",
       "</td>\n",
       "<td>Central Toronto\n",
       "</td>\n",
       "<td>Davisville\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5S\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>University of Toronto, Harbord\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6S\n",
       "</td>\n",
       "<td>West Toronto\n",
       "</td>\n",
       "<td>Runnymede, Swansea\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7S\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8S\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9S\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1T\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Clarks Corners, Tam O'Shanter, Sullivan\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2T\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3T\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4T\n",
       "</td>\n",
       "<td>Central Toronto\n",
       "</td>\n",
       "<td>Moore Park, Summerhill East\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5T\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Kensington Market, Chinatown, Grange Park\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6T\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7T\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8T\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9T\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1V\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Milliken, Agincourt North, Steeles East, L'Amoreaux East\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2V\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3V\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4V\n",
       "</td>\n",
       "<td>Central Toronto\n",
       "</td>\n",
       "<td>Summerhill West, Rathnelly, South Hill, Forest Hill SE, Deer Park\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5V\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>CN Tower, King and Spadina, Railway Lands, Harbourfront West, Bathurst Quay, South Niagara, Island airport\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6V\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7V\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8V\n",
       "</td>\n",
       "<td>Etobicoke\n",
       "</td>\n",
       "<td>New Toronto, Mimico South, Humber Bay Shores\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9V\n",
       "</td>\n",
       "<td>Etobicoke\n",
       "</td>\n",
       "<td>South Steeles, Silverstone, Humbergate, Jamestown, Mount Olive, Beaumond Heights, Thistletown, Albion Gardens\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1W\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Steeles West, L'Amoreaux West\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2W\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3W\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4W\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Rosedale\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5W\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Stn A PO Boxes\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6W\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7W\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8W\n",
       "</td>\n",
       "<td>Etobicoke\n",
       "</td>\n",
       "<td>Alderwood, Long Branch\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9W\n",
       "</td>\n",
       "<td>Etobicoke\n",
       "</td>\n",
       "<td>Northwest, West Humber - Clairville\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1X\n",
       "</td>\n",
       "<td>Scarborough\n",
       "</td>\n",
       "<td>Upper Rouge\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2X\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3X\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4X\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>St. James Town, Cabbagetown\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5X\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>First Canadian Place, Underground city\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6X\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7X\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8X\n",
       "</td>\n",
       "<td>Etobicoke\n",
       "</td>\n",
       "<td>The Kingsway, Montgomery Road, Old Mill North\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9X\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1Y\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2Y\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3Y\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4Y\n",
       "</td>\n",
       "<td>Downtown Toronto\n",
       "</td>\n",
       "<td>Church and Wellesley\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5Y\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6Y\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7Y\n",
       "</td>\n",
       "<td>East Toronto\n",
       "</td>\n",
       "<td>Business reply mail Processing Centre, South Central Letter Processing Plant Toronto\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8Y\n",
       "</td>\n",
       "<td>Etobicoke\n",
       "</td>\n",
       "<td>Old Mill South, King's Mill Park, Sunnylea, Humber Bay, Mimico NE, The Queensway East, Royal York South East, Kingsway Park South East\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9Y\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M1Z\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M2Z\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M3Z\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M4Z\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M5Z\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M6Z\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M7Z\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M8Z\n",
       "</td>\n",
       "<td>Etobicoke\n",
       "</td>\n",
       "<td>Mimico NW, The Queensway West, South of Bloor, Kingsway Park South West, Royal York South West\n",
       "</td></tr>\n",
       "<tr>\n",
       "<td>M9Z\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td>\n",
       "<td>Not assigned\n",
       "</td></tr></tbody></table>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "source = requests.get('https://en.wikipedia.org/wiki/List_of_postal_codes_of_Canada:_M').text\n",
    "soup=BeautifulSoup(source,'lxml')\n",
    "print(soup.title)\n",
    "from IPython.display import display_html\n",
    "tab = str(soup.table)\n",
    "display_html(tab,raw=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M1A</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M2A</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M4A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Victoria Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Regent Park, Harbourfront</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Postal Code           Borough              Neighbourhood\n",
       "0         M1A      Not assigned               Not assigned\n",
       "1         M2A      Not assigned               Not assigned\n",
       "2         M3A        North York                  Parkwoods\n",
       "3         M4A        North York           Victoria Village\n",
       "4         M5A  Downtown Toronto  Regent Park, Harbourfront"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfs = pd.read_html(tab)\n",
    "df=dfs[0]\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M4A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Victoria Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Regent Park, Harbourfront</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M6A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Lawrence Manor, Lawrence Heights</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M7A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Queen's Park, Ontario Provincial Government</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>M8X</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>The Kingsway, Montgomery Road, Old Mill North</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>M4Y</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Church and Wellesley</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>M7Y</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>Business reply mail Processing Centre, South C...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>M8Y</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Old Mill South, King's Mill Park, Sunnylea, Hu...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>M8Z</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Mimico NW, The Queensway West, South of Bloor,...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>103 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Postal Code           Borough  \\\n",
       "0           M3A        North York   \n",
       "1           M4A        North York   \n",
       "2           M5A  Downtown Toronto   \n",
       "3           M6A        North York   \n",
       "4           M7A  Downtown Toronto   \n",
       "..          ...               ...   \n",
       "98          M8X         Etobicoke   \n",
       "99          M4Y  Downtown Toronto   \n",
       "100         M7Y      East Toronto   \n",
       "101         M8Y         Etobicoke   \n",
       "102         M8Z         Etobicoke   \n",
       "\n",
       "                                         Neighbourhood  \n",
       "0                                            Parkwoods  \n",
       "1                                     Victoria Village  \n",
       "2                            Regent Park, Harbourfront  \n",
       "3                     Lawrence Manor, Lawrence Heights  \n",
       "4          Queen's Park, Ontario Provincial Government  \n",
       "..                                                 ...  \n",
       "98       The Kingsway, Montgomery Road, Old Mill North  \n",
       "99                                Church and Wellesley  \n",
       "100  Business reply mail Processing Centre, South C...  \n",
       "101  Old Mill South, King's Mill Park, Sunnylea, Hu...  \n",
       "102  Mimico NW, The Queensway West, South of Bloor,...  \n",
       "\n",
       "[103 rows x 3 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Dropping the rows where Borough is 'Not assigned'\n",
    "df1 = df[df.Borough != 'Not assigned']\n",
    "\n",
    "# Combining the neighbourhoods with same Postalcode\n",
    "df2 = df1.groupby(['Postal Code','Borough'], sort=False).agg(', '.join)\n",
    "df2.reset_index(inplace=True)\n",
    "\n",
    "# Replacing the name of the neighbourhoods which are 'Not assigned' with names of Borough\n",
    "df2['Neighbourhood'] = np.where(df2['Neighbourhood'] == 'Not assigned',df2['Borough'], df2['Neighbourhood'])\n",
    "\n",
    "df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(103, 3)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Shape of data frame\n",
    "df2.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Importing csv file for Latitude and Longitude"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M1B</td>\n",
       "      <td>43.806686</td>\n",
       "      <td>-79.194353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M1C</td>\n",
       "      <td>43.784535</td>\n",
       "      <td>-79.160497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M1E</td>\n",
       "      <td>43.763573</td>\n",
       "      <td>-79.188711</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M1G</td>\n",
       "      <td>43.770992</td>\n",
       "      <td>-79.216917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M1H</td>\n",
       "      <td>43.773136</td>\n",
       "      <td>-79.239476</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Postal Code   Latitude  Longitude\n",
       "0         M1B  43.806686 -79.194353\n",
       "1         M1C  43.784535 -79.160497\n",
       "2         M1E  43.763573 -79.188711\n",
       "3         M1G  43.770992 -79.216917\n",
       "4         M1H  43.773136 -79.239476"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lat_lon = pd.read_csv('https://cocl.us/Geospatial_data')\n",
    "lat_lon.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Merging the two tables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "      <td>43.753259</td>\n",
       "      <td>-79.329656</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M4A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Victoria Village</td>\n",
       "      <td>43.725882</td>\n",
       "      <td>-79.315572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Regent Park, Harbourfront</td>\n",
       "      <td>43.654260</td>\n",
       "      <td>-79.360636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M6A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Lawrence Manor, Lawrence Heights</td>\n",
       "      <td>43.718518</td>\n",
       "      <td>-79.464763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M7A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Queen's Park, Ontario Provincial Government</td>\n",
       "      <td>43.662301</td>\n",
       "      <td>-79.389494</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Postal Code           Borough                                Neighbourhood  \\\n",
       "0         M3A        North York                                    Parkwoods   \n",
       "1         M4A        North York                             Victoria Village   \n",
       "2         M5A  Downtown Toronto                    Regent Park, Harbourfront   \n",
       "3         M6A        North York             Lawrence Manor, Lawrence Heights   \n",
       "4         M7A  Downtown Toronto  Queen's Park, Ontario Provincial Government   \n",
       "\n",
       "    Latitude  Longitude  \n",
       "0  43.753259 -79.329656  \n",
       "1  43.725882 -79.315572  \n",
       "2  43.654260 -79.360636  \n",
       "3  43.718518 -79.464763  \n",
       "4  43.662301 -79.389494  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3 = pd.merge(df2,lat_lon, on = 'Postal Code')\n",
    "df3.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Regent Park, Harbourfront</td>\n",
       "      <td>43.654260</td>\n",
       "      <td>-79.360636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M7A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Queen's Park, Ontario Provincial Government</td>\n",
       "      <td>43.662301</td>\n",
       "      <td>-79.389494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>M5B</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Garden District, Ryerson</td>\n",
       "      <td>43.657162</td>\n",
       "      <td>-79.378937</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>M5C</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>St. James Town</td>\n",
       "      <td>43.651494</td>\n",
       "      <td>-79.375418</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>M4E</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>43.676357</td>\n",
       "      <td>-79.293031</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>M5E</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Berczy Park</td>\n",
       "      <td>43.644771</td>\n",
       "      <td>-79.373306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>M5G</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Central Bay Street</td>\n",
       "      <td>43.657952</td>\n",
       "      <td>-79.387383</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>M6G</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Christie</td>\n",
       "      <td>43.669542</td>\n",
       "      <td>-79.422564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>M5H</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Richmond, Adelaide, King</td>\n",
       "      <td>43.650571</td>\n",
       "      <td>-79.384568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>M6H</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Dufferin, Dovercourt Village</td>\n",
       "      <td>43.669005</td>\n",
       "      <td>-79.442259</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>M5J</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Harbourfront East, Union Station, Toronto Islands</td>\n",
       "      <td>43.640816</td>\n",
       "      <td>-79.381752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>M6J</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>43.647927</td>\n",
       "      <td>-79.419750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>M4K</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>The Danforth West, Riverdale</td>\n",
       "      <td>43.679557</td>\n",
       "      <td>-79.352188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>M5K</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Toronto Dominion Centre, Design Exchange</td>\n",
       "      <td>43.647177</td>\n",
       "      <td>-79.381576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>M6K</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Brockton, Parkdale Village, Exhibition Place</td>\n",
       "      <td>43.636847</td>\n",
       "      <td>-79.428191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>M4L</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>India Bazaar, The Beaches West</td>\n",
       "      <td>43.668999</td>\n",
       "      <td>-79.315572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>M5L</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Commerce Court, Victoria Hotel</td>\n",
       "      <td>43.648198</td>\n",
       "      <td>-79.379817</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>M4M</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>Studio District</td>\n",
       "      <td>43.659526</td>\n",
       "      <td>-79.340923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>M4N</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>Lawrence Park</td>\n",
       "      <td>43.728020</td>\n",
       "      <td>-79.388790</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>M5N</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>Roselawn</td>\n",
       "      <td>43.711695</td>\n",
       "      <td>-79.416936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>M4P</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>Davisville North</td>\n",
       "      <td>43.712751</td>\n",
       "      <td>-79.390197</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>M5P</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>Forest Hill North &amp; West, Forest Hill Road Park</td>\n",
       "      <td>43.696948</td>\n",
       "      <td>-79.411307</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>M6P</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>High Park, The Junction South</td>\n",
       "      <td>43.661608</td>\n",
       "      <td>-79.464763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>M4R</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>North Toronto West, Lawrence Park</td>\n",
       "      <td>43.715383</td>\n",
       "      <td>-79.405678</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>M5R</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>The Annex, North Midtown, Yorkville</td>\n",
       "      <td>43.672710</td>\n",
       "      <td>-79.405678</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>M6R</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Parkdale, Roncesvalles</td>\n",
       "      <td>43.648960</td>\n",
       "      <td>-79.456325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>M4S</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>Davisville</td>\n",
       "      <td>43.704324</td>\n",
       "      <td>-79.388790</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>M5S</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>University of Toronto, Harbord</td>\n",
       "      <td>43.662696</td>\n",
       "      <td>-79.400049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>M6S</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Runnymede, Swansea</td>\n",
       "      <td>43.651571</td>\n",
       "      <td>-79.484450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>M4T</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>Moore Park, Summerhill East</td>\n",
       "      <td>43.689574</td>\n",
       "      <td>-79.383160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>M5T</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Kensington Market, Chinatown, Grange Park</td>\n",
       "      <td>43.653206</td>\n",
       "      <td>-79.400049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>M4V</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>Summerhill West, Rathnelly, South Hill, Forest...</td>\n",
       "      <td>43.686412</td>\n",
       "      <td>-79.400049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>M5V</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>CN Tower, King and Spadina, Railway Lands, Har...</td>\n",
       "      <td>43.628947</td>\n",
       "      <td>-79.394420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>M4W</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Rosedale</td>\n",
       "      <td>43.679563</td>\n",
       "      <td>-79.377529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>M5W</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Stn A PO Boxes</td>\n",
       "      <td>43.646435</td>\n",
       "      <td>-79.374846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>M4X</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>St. James Town, Cabbagetown</td>\n",
       "      <td>43.667967</td>\n",
       "      <td>-79.367675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>M5X</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>First Canadian Place, Underground city</td>\n",
       "      <td>43.648429</td>\n",
       "      <td>-79.382280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>M4Y</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Church and Wellesley</td>\n",
       "      <td>43.665860</td>\n",
       "      <td>-79.383160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>M7Y</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>Business reply mail Processing Centre, South C...</td>\n",
       "      <td>43.662744</td>\n",
       "      <td>-79.321558</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Postal Code           Borough  \\\n",
       "2           M5A  Downtown Toronto   \n",
       "4           M7A  Downtown Toronto   \n",
       "9           M5B  Downtown Toronto   \n",
       "15          M5C  Downtown Toronto   \n",
       "19          M4E      East Toronto   \n",
       "20          M5E  Downtown Toronto   \n",
       "24          M5G  Downtown Toronto   \n",
       "25          M6G  Downtown Toronto   \n",
       "30          M5H  Downtown Toronto   \n",
       "31          M6H      West Toronto   \n",
       "36          M5J  Downtown Toronto   \n",
       "37          M6J      West Toronto   \n",
       "41          M4K      East Toronto   \n",
       "42          M5K  Downtown Toronto   \n",
       "43          M6K      West Toronto   \n",
       "47          M4L      East Toronto   \n",
       "48          M5L  Downtown Toronto   \n",
       "54          M4M      East Toronto   \n",
       "61          M4N   Central Toronto   \n",
       "62          M5N   Central Toronto   \n",
       "67          M4P   Central Toronto   \n",
       "68          M5P   Central Toronto   \n",
       "69          M6P      West Toronto   \n",
       "73          M4R   Central Toronto   \n",
       "74          M5R   Central Toronto   \n",
       "75          M6R      West Toronto   \n",
       "79          M4S   Central Toronto   \n",
       "80          M5S  Downtown Toronto   \n",
       "81          M6S      West Toronto   \n",
       "83          M4T   Central Toronto   \n",
       "84          M5T  Downtown Toronto   \n",
       "86          M4V   Central Toronto   \n",
       "87          M5V  Downtown Toronto   \n",
       "91          M4W  Downtown Toronto   \n",
       "92          M5W  Downtown Toronto   \n",
       "96          M4X  Downtown Toronto   \n",
       "97          M5X  Downtown Toronto   \n",
       "99          M4Y  Downtown Toronto   \n",
       "100         M7Y      East Toronto   \n",
       "\n",
       "                                         Neighbourhood   Latitude  Longitude  \n",
       "2                            Regent Park, Harbourfront  43.654260 -79.360636  \n",
       "4          Queen's Park, Ontario Provincial Government  43.662301 -79.389494  \n",
       "9                             Garden District, Ryerson  43.657162 -79.378937  \n",
       "15                                      St. James Town  43.651494 -79.375418  \n",
       "19                                         The Beaches  43.676357 -79.293031  \n",
       "20                                         Berczy Park  43.644771 -79.373306  \n",
       "24                                  Central Bay Street  43.657952 -79.387383  \n",
       "25                                            Christie  43.669542 -79.422564  \n",
       "30                            Richmond, Adelaide, King  43.650571 -79.384568  \n",
       "31                        Dufferin, Dovercourt Village  43.669005 -79.442259  \n",
       "36   Harbourfront East, Union Station, Toronto Islands  43.640816 -79.381752  \n",
       "37                            Little Portugal, Trinity  43.647927 -79.419750  \n",
       "41                        The Danforth West, Riverdale  43.679557 -79.352188  \n",
       "42            Toronto Dominion Centre, Design Exchange  43.647177 -79.381576  \n",
       "43        Brockton, Parkdale Village, Exhibition Place  43.636847 -79.428191  \n",
       "47                      India Bazaar, The Beaches West  43.668999 -79.315572  \n",
       "48                      Commerce Court, Victoria Hotel  43.648198 -79.379817  \n",
       "54                                     Studio District  43.659526 -79.340923  \n",
       "61                                       Lawrence Park  43.728020 -79.388790  \n",
       "62                                            Roselawn  43.711695 -79.416936  \n",
       "67                                    Davisville North  43.712751 -79.390197  \n",
       "68     Forest Hill North & West, Forest Hill Road Park  43.696948 -79.411307  \n",
       "69                       High Park, The Junction South  43.661608 -79.464763  \n",
       "73                   North Toronto West, Lawrence Park  43.715383 -79.405678  \n",
       "74                 The Annex, North Midtown, Yorkville  43.672710 -79.405678  \n",
       "75                              Parkdale, Roncesvalles  43.648960 -79.456325  \n",
       "79                                          Davisville  43.704324 -79.388790  \n",
       "80                      University of Toronto, Harbord  43.662696 -79.400049  \n",
       "81                                  Runnymede, Swansea  43.651571 -79.484450  \n",
       "83                         Moore Park, Summerhill East  43.689574 -79.383160  \n",
       "84           Kensington Market, Chinatown, Grange Park  43.653206 -79.400049  \n",
       "86   Summerhill West, Rathnelly, South Hill, Forest...  43.686412 -79.400049  \n",
       "87   CN Tower, King and Spadina, Railway Lands, Har...  43.628947 -79.394420  \n",
       "91                                            Rosedale  43.679563 -79.377529  \n",
       "92                                      Stn A PO Boxes  43.646435 -79.374846  \n",
       "96                         St. James Town, Cabbagetown  43.667967 -79.367675  \n",
       "97              First Canadian Place, Underground city  43.648429 -79.382280  \n",
       "99                                Church and Wellesley  43.665860 -79.383160  \n",
       "100  Business reply mail Processing Centre, South C...  43.662744 -79.321558  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df4 = df3[df3['Borough'].str.contains('Toronto',regex=False)]\n",
    "df4"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Visualizing using Folium"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" data-html= onload=\"this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute('data-html')));this.contentDocument.close();\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a21e5c9d0>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "map_toronto = folium.Map(location=[43.651070,-79.347015],zoom_start=10)\n",
    "\n",
    "for lat,lng,borough,neighbourhood in zip(df4['Latitude'],df4['Longitude'],df4['Borough'],df4['Neighbourhood']):\n",
    "    label = '{}, {}'.format(neighbourhood, borough)\n",
    "    label = folium.Popup(label, parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "    [lat,lng],\n",
    "    radius=5,\n",
    "    popup=label,\n",
    "    color='blue',\n",
    "    fill=True,\n",
    "    fill_color='#3186cc',\n",
    "    fill_opacity=0.7,\n",
    "    parse_html=False).add_to(map_toronto)\n",
    "map_toronto"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "k=5\n",
    "toronto_clustering = df4.drop(['Postal Code','Borough','Neighbourhood'],1)\n",
    "kmeans = KMeans(n_clusters = k,random_state=0).fit(toronto_clustering)\n",
    "kmeans.labels_\n",
    "df4.insert(0, 'Cluster Labels', kmeans.labels_)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "df4"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Visualizing Clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" data-html= onload=\"this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute('data-html')));this.contentDocument.close();\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a21ff4610>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create map\n",
    "map_clusters = folium.Map(location=[43.651070,-79.347015],zoom_start=10)\n",
    "\n",
    "# set color scheme for the clusters\n",
    "x = np.arange(k)\n",
    "ys = [i + x + (i*x)**2 for i in range(k)]\n",
    "colors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\n",
    "rainbow = [colors.rgb2hex(i) for i in colors_array]\n",
    "\n",
    "# add markers to the map\n",
    "markers_colors = []\n",
    "for lat, lon, neighbourhood, cluster in zip(df4['Latitude'], df4['Longitude'], df4['Neighbourhood'], df4['Cluster Labels']):\n",
    "    label = folium.Popup(' Cluster ' + str(cluster), parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lon],\n",
    "        radius=5,\n",
    "        popup=label,\n",
    "        color=rainbow[cluster-1],\n",
    "        fill=True,\n",
    "        fill_color=rainbow[cluster-1],\n",
    "        fill_opacity=0.7).add_to(map_clusters)\n",
    "       \n",
    "map_clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
